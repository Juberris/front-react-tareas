{"version":3,"sources":["components/Header.js","config/axios.js","actions/productoActions.js","types/index.js","components/Producto.js","components/Productos.js","actions/alertaActions.js","components/NuevoProducto.js","components/EditarProducto.js","reducers/productosReducer.js","reducers/alertaReducer.js","reducers/index.js","store.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","to","clienteAxios","axios","create","baseURL","agregarProducto","type","payload","agregarProductoExito","producto","agregarProductoError","estado","descargarProductos","descargaProductosExitosa","productos","descargaProductosError","obtenerProductoEliminar","id","eliminarProductoExito","eliminarProductoError","obtenerProductoEditarAction","editarProducto","editarProductoExito","editarProductoError","Producto","nombre","precio","dispatch","useDispatch","history","useHistory","confirmarEliminarProducto","Swal","fire","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","then","result","value","a","async","delete","console","log","borrarProductoAction","redireccionarEdicion","obtenerProductoEditar","push","onClick","Productos","useEffect","get","respuesta","data","useSelector","state","error","cargando","loading","scope","length","map","key","crearAlerta","alerta","ocultarAlerta","NuevoProductos","useState","guardarNombre","guardarPrecio","post","crearNuevoProductoAction","classes","msg","onSubmit","e","preventDefault","trim","mostrarAlerta","placeholder","name","onChange","target","Number","EditarProducto","guardarProducto","productoeditar","onChangeFormulario","put","editarProductoAction","initialState","productoeliminar","combineReducers","action","filter","store","createStore","reducer","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","f","App","exact","path","component","NuevoProducto","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cb4b73ca.chunk.js","sourcesContent":["import React from 'react';\nimport {Â Link } from 'react-router-dom';\n\nconst Header = () => {\n    return ( \n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary justify-content-between\">\n            <div className=\"container\">\n                <h1> \n                    <Link to={'/'} className=\"text-light\">\n                        CRUD - React, Redux, REST API & Axios\n                    </Link> \n                </h1>\n            </div>\n\n            <Link to={\"/productos/nuevo\"}\n                className=\"btn btn-danger nuevo-post d-block d-md-inline-block\"\n            >Agregar Producto &#43;</Link>\n        </nav>\n     );\n}\n \nexport default Header;","import axios from 'axios';\n\nconst clienteAxios = axios.create({\n    baseURL: 'http://localhost:4000/'\n});\n\nexport default clienteAxios;","import {\n    AGREGAR_PRODUCTO,\n    AGREGAR_PRODUCTO_EXITO,\n    AGREGAR_PRODUCTO_ERROR,\n    COMENZAR_DESCARGA_PRODUCTOS,\n    DESCARGA_PRODUCTOS_EXITO,\n    DESCARGA_PRODUCTOS_ERROR, \n    OBTENER_PRODUCTO_ELIMINAR,\n    PRODUCTO_ELIMINADO_EXITO,\n    PRODUCTO_ELIMINADO_ERROR,\n    OBTENER_PRODUCTO_EDITAR,\n    COMENZAR_EDICION_PRODUCTO,\n    PRODUCTO_EDITADO_EXITO,\n    PRODUCTO_EDITADO_ERROR\n} from '../types';\nimport clienteAxios from '../config/axios';\nimport Swal from 'sweetalert2';\n\n// Crear nuevos productos\nexport function crearNuevoProductoAction(producto) {\n    return async (dispatch) => {\n        dispatch( agregarProducto() );\n\n        try {\n            // insertar en la API\n            await clienteAxios.post('/productos', producto);\n\n            // Si todo sale bien, actualizar el state\n           dispatch( agregarProductoExito(producto) );\n\n            // Alerta\n            Swal.fire(\n                'Correcto', \n                'El producto se agregÃ³ correctamente',\n                'success'\n            );\n\n        } catch (error) {\n            console.log(error);\n            // si hay un error cambiar el state\n            dispatch( agregarProductoError(true) );\n\n            // alerta de error\n            Swal.fire({\n                icon: 'error',\n                title: 'Hubo un error',\n                text: 'Hubo un error, intenta de nuevo'\n            })\n        }\n    }\n}\n\nconst agregarProducto = () => ({\n    type: AGREGAR_PRODUCTO,\n    payload: true\n});\n\n// si el producto se guarda en la base de datos\nconst agregarProductoExito = producto => ({\n    type: AGREGAR_PRODUCTO_EXITO,\n    payload: producto\n})\n\n// si hubo un error\nconst agregarProductoError = estado => ({\n    type: AGREGAR_PRODUCTO_ERROR,\n    payload: estado\n});\n\n\n// FunciÃ³n que descarga los productos de la base de datos\nexport function obtenerProductosAction() {\n    return async (dispatch) => {\n        dispatch( descargarProductos() );\n\n        try {\n            const respuesta = await clienteAxios.get('/productos');\n            dispatch( descargaProductosExitosa(respuesta.data) )\n        } catch (error) {\n            console.log(error);\n            dispatch( descargaProductosError() )\n        }\n    }\n}\n\nconst descargarProductos = () => ({\n    type: COMENZAR_DESCARGA_PRODUCTOS,\n    payload: true\n});\n\nconst descargaProductosExitosa = productos => ({\n    type: DESCARGA_PRODUCTOS_EXITO,\n    payload: productos\n})\nconst descargaProductosError = () => ({\n    type: DESCARGA_PRODUCTOS_ERROR, \n    payload: true\n});\n\n// Selecciona y elimina el producto\nexport function borrarProductoAction(id) {\n    return async (dispatch) => {\n        dispatch(obtenerProductoEliminar(id) );\n\n        try {\n            await clienteAxios.delete(`/productos/${id}`);\n            dispatch( eliminarProductoExito() );\n\n            // Si se elimina, mostrar alerta\n            Swal.fire(\n                'Eliminado',\n                'El producto se eliminÃ³ correctamente',\n                'success'\n            )\n        } catch (error) {\n            console.log(error);\n            dispatch( eliminarProductoError() );\n        }\n    }\n}\n\nconst obtenerProductoEliminar = id => ({\n    type: OBTENER_PRODUCTO_ELIMINAR,\n    payload: id\n});\nconst eliminarProductoExito = () => ({\n    type: PRODUCTO_ELIMINADO_EXITO\n})\nconst eliminarProductoError = () => ({\n    type: PRODUCTO_ELIMINADO_ERROR,\n    payload: true\n});\n\n// Colocar producto en ediciÃ³n\nexport function obtenerProductoEditar(producto) {\n    return (dispatch) => {\n        dispatch( obtenerProductoEditarAction(producto) )\n    }\n}\n\nconst obtenerProductoEditarAction = producto => ({\n    type: OBTENER_PRODUCTO_EDITAR,\n    payload: producto\n})\n\n// Edita un registro en la api y state\nexport function editarProductoAction(producto) {\n    return async (dispatch) => {\n        dispatch( editarProducto() );\n\n        try {\n            await clienteAxios.put(`/productos/${producto.id}`, producto);    \n            dispatch( editarProductoExito(producto) );\n        } catch (error) {\n            console.log(error);\n            dispatch( editarProductoError() );\n        }\n    }\n}\nconst editarProducto = () => ({\n    type: COMENZAR_EDICION_PRODUCTO\n});\n\nconst editarProductoExito = producto => ({\n    type: PRODUCTO_EDITADO_EXITO,\n    payload: producto\n});\n\nconst editarProductoError = () => ({\n    type: PRODUCTO_EDITADO_ERROR,\n    payload: true\n})","export const AGREGAR_PRODUCTO = 'AGREGAR_PRODUCTO';\nexport const AGREGAR_PRODUCTO_EXITO = 'AGREGAR_PRODUCTO_EXITO';\nexport const AGREGAR_PRODUCTO_ERROR = 'AGREGAR_PRODUCTO_ERROR';\n\nexport const COMENZAR_DESCARGA_PRODUCTOS = 'COMENZAR_DESCARGA_PRODUCTOS';\nexport const DESCARGA_PRODUCTOS_EXITO = 'DESCARGA_PRODUCTOS_EXITO';\nexport const DESCARGA_PRODUCTOS_ERROR = 'DESCARGA_PRODUCTOS_ERROR';\n\nexport const OBTENER_PRODUCTO_ELIMINAR = 'OBTENER_PRODUCTO_ELIMINAR';\nexport const PRODUCTO_ELIMINADO_EXITO = 'PRODUCTO_ELIMINADO_EXITO';\nexport const PRODUCTO_ELIMINADO_ERROR = 'PRODUCTO_ELIMINADO_ERROR';\n\nexport const OBTENER_PRODUCTO_EDITAR = 'OBTENER_PRODUCTO_EDITAR';\nexport const COMENZAR_EDICION_PRODUCTO = 'COMENZAR_EDICION_PRODUCTO';\nexport const PRODUCTO_EDITADO_EXITO = 'PRODUCTO_EDITADO_EXITO';\nexport const PRODUCTO_EDITADO_ERROR = 'PRODUCTO_EDITADO_ERROR';\n\nexport const MOSTRAR_ALERTA = 'MOSTRAR_ALERTA';\nexport const OCULTAR_ALERTA = 'OCULTAR_ALERTA';","import React from 'react';\nimport {Â useHistory } from 'react-router-dom';\nimport Swal from 'sweetalert2';\n\n\n// Redux\nimport { useDispatch } from 'react-redux';\nimport { borrarProductoAction, obtenerProductoEditar } from '../actions/productoActions';\n\nconst Producto = ({producto}) => {\n    const { nombre, precio, idÂ } = producto;\n\n    const dispatch = useDispatch();\n    const history = useHistory(); // habilitar history para redirecciÃ³n\n\n    // Confirmar si desea eliminarlo\n    const confirmarEliminarProducto = id => {\n\n        // preguntar al usuario\n        Swal.fire({\n            title: 'Â¿Estas seguro?',\n            text: \"Un producto que se elimina no se puede recuperar\",\n            icon: 'warning',\n            showCancelButton: true,\n            confirmButtonColor: '#3085d6',\n            cancelButtonColor: '#d33',\n            confirmButtonText: 'Si, eliminar!!',\n            cancelButtonText: 'Cancelar'\n        }).then((result) => {\n            if (result.value) {\n                // pasarlo al action\n                dispatch( borrarProductoAction(id) );\n            }\n        });\n    }\n\n    // funciÃ³n que redirige de forma programada\n    const redireccionarEdicion = producto => {\n        dispatch( obtenerProductoEditar(producto) );\n        history.push(`/productos/editar/${producto.id}`)\n    }\n\n    return ( \n        <tr>\n            <td>{nombre}</td>\n            <td><span className=\"font-weight-bold\"> $ {precio} </span></td>\n            <td className=\"acciones\">\n                <button \n                    type=\"button\"\n                    onClick={ () => redireccionarEdicion(producto) }\n                    className=\"btn btn-primary mr-2\">\n                    Editar\n                </button>\n                <button \n                    type=\"button\"\n                    className=\"btn btn-danger\"\n                    onClick={() => confirmarEliminarProducto(id)}\n                >Eliminar </button>\n            </td>\n        </tr>\n     );\n}\n \nexport default Producto;","import React, { Fragment, useEffect } from 'react';\nimport Producto from './Producto';\n\n// Redux\nimport { useSelector, useDispatch } from 'react-redux';\nimport { obtenerProductosAction } from '../actions/productoActions';\n\nconst Productos = () => {\n\n    const dispatch = useDispatch();\n\n    useEffect( ()=> {\n\n        // Consultar la api\n        const cargarProductos = () => dispatch( obtenerProductosAction() );\n        cargarProductos();\n        // eslint-disable-next-line\n    }, []);\n\n    // obtener el state\n    const productos = useSelector( state => state.productos.productos );\n    const error = useSelector(state => state.productos.error);\n    const cargando = useSelector(state => state.productos.loading);\n\n    return ( \n       <Fragment>\n           <h2 className=\"text-center my-5\">Listado de Productos</h2>\n\n           { error ? <p className=\"font-weight-bold alert alert-danger text-center mt-4\">Hubo un error</p> : null }\n           \n           { cargando ? <p className=\"text-center\">Cargando....</p> : null }\n\n           <table className=\"table table-striped\">\n               <thead className=\"bg-primary table-dark\">\n                    <tr>\n                        <th scope=\"col\">Nombre</th>\n                        <th scope=\"col\">Precio</th>\n                        <th scope=\"col\">Acciones</th>\n                    </tr>\n               </thead>\n               <tbody>\n                   { productos.length === 0 ? 'No hay productos' : (\n                       productos.map(producto => (\n                           <Producto\n                                key={producto.id}\n                                producto={producto}\n                           />\n                       ))\n                   ) }\n               </tbody>\n           </table>\n       </Fragment>\n     );\n}\n \nexport default Productos;","import {\n    MOSTRAR_ALERTA,\n    OCULTAR_ALERTA\n} from '../types';\n\n// Muestra alerta\nexport function mostrarAlerta(alerta) {\n    return (dispatch) => {\n        dispatch( crearAlerta(alerta) )\n    }\n}\nconst crearAlerta = alerta => ({\n    type: MOSTRAR_ALERTA,\n    payload: alerta\n})\n\n// ocultar alerta\nexport function ocultarAlertaAction() {\n    return (dispatch) => {\n        dispatch( ocultarAlerta() )\n    }\n}\n\nconst ocultarAlerta = () => ({\n    type: OCULTAR_ALERTA\n})","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\n// Actions de Redux\nimport { crearNuevoProductoAction } from '../actions/productoActions';\nimport { mostrarAlerta, ocultarAlertaAction } from '../actions/alertaActions';\n\nconst NuevoProductos = ({history}) => {\n\n    // state del componente\n    const [nombre, guardarNombre] = useState('');\n    const [precio, guardarPrecio] = useState(0);\n\n    // utilizar use dispatch y te crea una funciÃ³n\n    const dispatch = useDispatch();\n\n    // Acceder al state del store\n    const cargando = useSelector( state => state.productos.loading );\n    const error = useSelector(state => state.productos.error);\n    const alerta = useSelector(state => state.alerta.alerta);\n\n\n    // mandar llamar el action de productoAction\n    const agregarProducto = producto => dispatch( crearNuevoProductoAction(producto) );\n\n    // cuando el usuario haga submit\n    const submitNuevoProducto = e => {\n        e.preventDefault();\n\n        // validar formulario\n        if(nombre.trim() === '' || precio <= 0) {\n\n            const alerta = {\n                msg: 'Ambos campos son obligatorios',\n                classes: 'alert alert-danger text-center text-uppercase p3'\n            }\n            dispatch( mostrarAlerta(alerta) );\n\n            return;\n        }\n\n        // si no hay errores\n        dispatch( ocultarAlertaAction() );\n\n        // crear el nuevo producto\n        agregarProducto({\n            nombre,\n            precio\n        });\n\n        // redireccionar\n        history.push('/');\n    }\n\n\n    return ( \n        <div className=\"row justify-content-center\">\n            <div className=\"col-md-8\">\n                <div className=\"card\">\n                    <div className=\"card-body\">\n                        <h2 className=\"text-center mb-4 font-weight-bold\">\n                            Agregar Nuevo Producto\n                        </h2>\n\n                        {alerta ? <p className={alerta.classes}> {alerta.msg} </p> : null }\n\n                        <form\n                            onSubmit={submitNuevoProducto}\n                        >\n                            <div className=\"form-group\">\n                                <label>Nombre Producto</label>\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    placeholder=\"Nombre Producto\"\n                                    name=\"nombre\"\n                                    value={nombre}\n                                    onChange={e => guardarNombre(e.target.value)}\n                                />\n                            </div>\n\n                            <div className=\"form-group\">\n                                <label>Precio Producto</label>\n                                <input\n                                    type=\"number\"\n                                    className=\"form-control\"\n                                    placeholder=\"Precio Producto\"\n                                    name=\"precio\"\n                                    value={precio}\n                                    onChange={e =>  guardarPrecio( Number(e.target.value) )}\n                                />\n                            </div>\n\n                            <button \n                                type=\"submit\"\n                                className=\"btn btn-primary font-weight-bold text-uppercase d-block w-100\"\n                            >Agregar</button>\n                        </form>\n\n                        { cargando ? <p>Cargando...</p> : null }\n                        \n                        { error ? <p className=\"alert alert-danger p2 mt-4 text-center\">Hubo un error</p> : null }\n                    </div>\n                </div>\n            </div>\n        </div>\n     );\n}\n \nexport default NuevoProductos;","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { editarProductoAction } from '../actions/productoActions';\nimport {Â useHistory } from 'react-router-dom';\n\nconst EditarProducto = () => {\n\n    const history = useHistory();\n    const dispatch = useDispatch();\n\n    // nuevo state de producto\n    const [ producto, guardarProducto] = useState({\n        nombre: '',\n        precio: '' \n    })\n\n    // producto a editar\n    const productoeditar = useSelector(state => state.productos.productoeditar);\n  \n    // llenar el state automaticamente\n    useEffect( () => {\n        guardarProducto(productoeditar);\n    }, [productoeditar]);\n\n    // Leer los datos del formulario\n    const onChangeFormulario = e => {\n        guardarProducto({\n            ...producto,\n            [e.target.name] : e.target.value\n        })\n    }\n\n\n    const { nombre, precio} = producto;\n\n    const submitEditarProducto = e => {\n        e.preventDefault();\n\n        dispatch( editarProductoAction(producto) );\n    \n        history.push('/');\n    }\n    \n    return ( \n        <div className=\"row justify-content-center\">\n            <div className=\"col-md-8\">\n                <div className=\"card\">\n                    <div className=\"card-body\">\n                        <h2 className=\"text-center mb-4 font-weight-bold\">\n                            Editar Producto\n                        </h2>\n\n                        <form\n                            onSubmit={submitEditarProducto}\n                        >\n                            <div className=\"form-group\">\n                                <label>Nombre Producto</label>\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    placeholder=\"Nombre Producto\"\n                                    name=\"nombre\"\n                                    value={nombre}\n                                    onChange={onChangeFormulario}\n                                />\n                            </div>\n\n                            <div className=\"form-group\">\n                                <label>Precio Producto</label>\n                                <input\n                                    type=\"number\"\n                                    className=\"form-control\"\n                                    placeholder=\"Precio Producto\"\n                                    name=\"precio\"\n                                    value={precio}\n                                    onChange={onChangeFormulario}\n                                />\n                            </div>\n\n                            <button \n                                type=\"submit\"\n                                className=\"btn btn-primary font-weight-bold text-uppercase d-block w-100\"\n                            >Guardar Cambios</button>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n     );\n}\n \nexport default EditarProducto;","import {\n    AGREGAR_PRODUCTO,\n    AGREGAR_PRODUCTO_EXITO,\n    AGREGAR_PRODUCTO_ERROR,\n    COMENZAR_DESCARGA_PRODUCTOS,\n    DESCARGA_PRODUCTOS_EXITO,\n    DESCARGA_PRODUCTOS_ERROR,\n    OBTENER_PRODUCTO_ELIMINAR,\n    PRODUCTO_ELIMINADO_EXITO,\n    PRODUCTO_ELIMINADO_ERROR,\n    OBTENER_PRODUCTO_EDITAR,\n    PRODUCTO_EDITADO_EXITO,\n    PRODUCTO_EDITADO_ERROR\n} from '../types';\n\n// cada reducer tiene su propio state\nconst initialState = {\n    productos: [],\n    error: null,\n    loading: false, \n    productoeliminar: null,\n    productoeditar: null\n}\n\nexport default function(state = initialState, action) {\n    switch(action.type) {\n        case COMENZAR_DESCARGA_PRODUCTOS:\n        case AGREGAR_PRODUCTO: \n            return {\n                ...state,\n                loading: action.payload\n            }\n        case AGREGAR_PRODUCTO_EXITO:\n            return {\n                ...state,\n                loading: false,\n                productos: [...state.productos, action.payload]\n            }\n        case AGREGAR_PRODUCTO_ERROR:\n        case DESCARGA_PRODUCTOS_ERROR:\n        case PRODUCTO_ELIMINADO_ERROR:\n        case PRODUCTO_EDITADO_ERROR:\n            return {\n                ...state,\n                loading: false,\n                error: action.payload\n            }\n        case DESCARGA_PRODUCTOS_EXITO:\n            return {\n                ...state,\n                loading: false,\n                error: null,\n                productos: action.payload\n            }\n        case OBTENER_PRODUCTO_ELIMINAR:\n            return {\n                ...state,\n                productoeliminar: action.payload\n            }\n        case PRODUCTO_ELIMINADO_EXITO:\n            return {\n                ...state,\n                productos: state.productos.filter( producto => producto.id !== state.productoeliminar ),\n                productoeliminar: null\n            }\n        case  OBTENER_PRODUCTO_EDITAR:\n            return {\n                ...state,\n                productoeditar: action.payload\n            }\n        case PRODUCTO_EDITADO_EXITO:\n            return {\n                ...state,\n                productoeditar: null,\n                productos: state.productos.map( producto => \n                    producto.id === action.payload.id ? producto = action.payload : producto\n                )\n            }\n        default:\n            return state;\n    }\n}","import {\n    MOSTRAR_ALERTA,\n    OCULTAR_ALERTA\n} from '../types';\n\n// Cada reducer tiene su state\nconst initialState = {\n    alerta: null\n}\n\nexport default function(state = initialState, action) {\n    switch(action.type) {\n        case MOSTRAR_ALERTA:\n            return {\n                ...state,\n                alerta: action.payload\n            }\n        case OCULTAR_ALERTA:\n            return {\n                ...state,\n                alerta: null\n            }\n        default:\n            return state;\n    }\n}","import { combineReducers } from 'redux';\nimport productosReducer from './productosReducer';\nimport alertaReducer from './alertaReducer';\n\nexport default combineReducers({\n    productos: productosReducer,\n    alerta: alertaReducer\n});","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport reducer from './reducers';\n\nconst store = createStore(\n    reducer, \n    compose( applyMiddleware(thunk), \n\n        typeof window === 'object' &&\n            typeof window.__REDUX_DEVTOOLS_EXTENSION__ !== 'undefined' ? \n                window.__REDUX_DEVTOOLS_EXTENSION__() : f => f\n    )\n);\n\nexport default store;","import React from 'react';\nimport Header from './components/Header';\nimport Productos from './components/Productos';\nimport NuevoProducto from './components/NuevoProducto';\nimport EditarProducto from './components/EditarProducto';\n\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\n// Redux\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nfunction App() {\n  return (\n    <Router>\n      <Provider store={store}>\n          <Header />\n\n          <div className=\"container mt-5\">\n              <Switch>\n                  <Route exact path=\"/\" component={Productos} />\n                  <Route exact path=\"/productos/nuevo\" component={NuevoProducto} />\n                  <Route exact path=\"/productos/editar/:id\" component={EditarProducto} />\n              </Switch>\n          </div>\n      </Provider>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}